{"date":"2024-06-14T20:04:43.761Z","courseId":"17","assignment":"AP-Spring03-CA6-phase2","trace":{"content":"#include \"superCommand.hpp\"\n\nPostCommand::PostCommand(vector<Major *> inputMajorVector, vector<Student *> inputStudentVector,\n                         vector<Course *> inputCourseVector, vector<Professor *> inputProfessorVector,\n                         Users *inputDefaultUser, string inputSubCommand, string inputArguments, string inputUserWhoLogged, vector<vector<string>> inputCourseOffers)\n    : SuperCommand(inputMajorVector, inputStudentVector, inputCourseVector, inputProfessorVector, inputDefaultUser)\n{\n    if (!CheckSubCommand(inputSubCommand))\n    {\n        throw ErrorHandler(2);\n    }\n    subCommand = inputSubCommand;\n    stringstream argstream(inputArguments);\n    string temp;\n    while (getline(argstream, temp, ' '))\n    {\n        arguments.push_back(temp);\n    }\n    userWhoLogged = inputUserWhoLogged;\n    tempCourseOffer = inputCourseOffers;\n}\n\nbool PostCommand::CheckSubCommand(string inputSubCommand)\n{\n    for (int i = 0; i < postSubCommandsList.size(); i++)\n    {\n        if (inputSubCommand == postSubCommandsList[i])\n        {\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid PostCommand::RunCommand()\n{\n    if (subCommand == \"login\")\n    {\n        LoginFunc(arguments);\n    }\n    else if (subCommand == \"logout\")\n    {\n        LogoutFunc(arguments);\n    }\n    else if (subCommand == \"post\")\n    {\n        PostFunc(arguments);\n    }\n    else if (subCommand == \"connect\")\n    {\n        ConnectFunc(arguments);\n    }\n    else if (subCommand == \"course_offer\")\n    {\n        if (userWhoLogged == \"0\")\n        {\n            CourseOfferFunc(arguments);\n        }\n        else\n        {\n            throw ErrorHandler(4);\n        }\n    }\n    else if (subCommand == \"profile_photo\")\n    {\n        ProfilePhotoFunc(arguments);\n    }\n}\n\nvoid PostCommand::LoginFunc(vector<string> inputArgs)\n{\n    if (inputArgs.size() != 4)\n    {\n        throw ErrorHandler(3);\n    }\n    string inputID, inputPassword;\n    if (inputArgs[0] == \"id\")\n    {\n        inputID = inputArgs[1];\n        inputPassword = inputArgs[3];\n    }\n    else\n    {\n        inputID = inputArgs[3];\n        inputPassword = inputArgs[1];\n    }\n    CheckLoginCondditions(inputID, inputPassword);\n    userWhoLogged = inputID;\n}\n\nvoid PostCommand::LogoutFunc(vector<string> inputArgs)\n{\n    if (inputArgs.size() != 0)\n    {\n        throw ErrorHandler(3);\n    }\n}\n\nvoid PostCommand::ConnectFunc(vector<string> inputArgs)\n{\n    if (inputArgs.size() != 2)\n    {\n        throw ErrorHandler(3);\n    }\n    int idNum = stoi(inputArgs[1]);\n    if (idNum < 1)\n    {\n        throw ErrorHandler(3);\n    }\n    ConnectUsers(userWhoLogged, inputArgs[1]);\n    ConnectUsers(inputArgs[1], userWhoLogged);\n    cout << \"OK\" << endl;\n}\n\nvoid PostCommand::PostFunc(vector<string> inputArgs)\n{\n    string fullArg = \"\";\n    for (int i = 0; i < inputArgs.size(); i++)\n    {\n        fullArg += inputArgs[i];\n        fullArg += \" \";\n    }\n    stringstream fullArgStream(fullArg);\n    string temp;\n    vector<string> firstTempVector;\n    while (getline(fullArgStream, temp, '\"'))\n    {\n        firstTempVector.push_back(temp);\n    }\n    string postTitle, postMessage, postPhoto = \"\";\n    if (firstTempVector[0] == \"title \")\n    {\n        if (firstTempVector[2] == \" message \")\n        {\n            postTitle = firstTempVector[1];\n            postMessage = firstTempVector[3];\n            if (firstTempVector.size() == 5)\n            {\n                stringstream ss(firstTempVector[4]);\n                for (int i = 0; i < 3; i++)\n                {\n                    getline(ss, postPhoto, ' ');\n                }\n            }\n        }\n        else\n        {\n            postTitle = firstTempVector[1];\n            postMessage = firstTempVector[4];\n            stringstream ss(firstTempVector[2]);\n            for (int i = 0; i < 3; i++)\n            {\n                getline(ss, postPhoto, ' ');\n            }\n        }\n    }\n    else if (firstTempVector[0] == \"message \")\n    {\n        if (firstTempVector[2] == \" title \")\n        {\n            postMessage = firstTempVector[1];\n            postTitle = firstTempVector[3];\n            if (firstTempVector.size() == 5)\n            {\n                stringstream ss(firstTempVector[4]);\n                for (int i = 0; i < 3; i++)\n                {\n                    getline(ss, postPhoto, ' ');\n                }\n            }\n        }\n        else\n        {\n            postMessage = firstTempVector[1];\n            postTitle = firstTempVector[4];\n            stringstream ss(firstTempVector[2]);\n            for (int i = 0; i < 3; i++)\n            {\n                getline(ss, postPhoto, ' ');\n            }\n        }\n    }\n    else\n    {\n        stringstream ss(firstTempVector[0]);\n        for (int i = 0; i < 3; i++)\n        {\n            getline(ss, postPhoto, ' ');\n        }\n        if(firstTempVector[1] == \" title \")\n        {\n            postTitle = firstTempVector[2];\n            postMessage = firstTempVector[4];\n        }\n        else\n        {\n            postMessage = firstTempVector[2];\n            postTitle = firstTempVector[4];\n        }\n    }\n    AddPostToUserPage(userWhoLogged, postTitle, postMessage , postPhoto);\n    //cout << \"OK\" << endl;\n    throw ErrorHandler(0);\n}\n\nvoid PostCommand::CourseOfferFunc(vector<string> inputArgs)\n{\n    if (inputArgs.size() != 12)\n    {\n        throw ErrorHandler(3);\n    }\n    string courseID, professorID, capacity, time, examDate, classNumber;\n    vector<string> outputArgs;\n    for (int i = 0; i < inputArgs.size() / 2; i++)\n    {\n        if (inputArgs[2 * i] == \"course_id\")\n        {\n            courseID = inputArgs[2 * i + 1];\n        }\n        else if (inputArgs[2 * i] == \"professor_id\")\n        {\n            professorID = inputArgs[2 * i + 1];\n        }\n        else if (inputArgs[2 * i] == \"capacity\")\n        {\n            capacity = inputArgs[2 * i + 1];\n        }\n        else if (inputArgs[2 * i] == \"time\")\n        {\n            time = inputArgs[2 * i + 1];\n        }\n        else if (inputArgs[2 * i] == \"exam_date\")\n        {\n            examDate = inputArgs[2 * i + 1];\n        }\n        else if (inputArgs[2 * i] == \"class_number\")\n        {\n            classNumber = inputArgs[2 * i + 1];\n        }\n    }\n    outputArgs.push_back(courseID);\n    outputArgs.push_back(FindProfessor(professorID)->getName());\n    outputArgs.push_back(capacity);\n    outputArgs.push_back(time);\n    outputArgs.push_back(examDate);\n    outputArgs.push_back(classNumber);\n    outputArgs.push_back(FindCourse(courseID)->getName());\n    if (stoi(courseID) < 1 || stoi(professorID) < 1 || stoi(capacity) < 1 || stoi(classNumber) < 1)\n    {\n        throw ErrorHandler(3);\n    }\n    CheckCourseAndProfessor(courseID, professorID, time, outputArgs);\n    tempCourseOffer.push_back(outputArgs);\n    cout << \"OK\" << endl;\n}\n\nvoid PostCommand::UpdateCourseOfferList(vector<vector<string>> &inputCourseOffer)\n{\n    inputCourseOffer = tempCourseOffer;\n}\n\nvoid PostCommand::ProfilePhotoFunc(vector<string> inputArgs)\n{\n    if (inputArgs.size() != 2)\n    {\n        throw ErrorHandler(3);\n    }\n    MainProfilePhoto(inputArgs[1], userWhoLogged);\n    throw ErrorHandler(0);\n}","filename":"/home/rayan/Desktop/clone/AP-FinalPraject/postCommand.cpp","identifier":"Save Document","languageId":"cpp","version":1,"lineCount":270},"failed":false}