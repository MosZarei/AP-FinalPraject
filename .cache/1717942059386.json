{"date":"2024-06-09T14:07:38.219Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":1484,"content":"#include \"superCommand.hpp\"\n#include <vector>\n\nGetCommand::GetCommand(vector<Major *> inputMajorVector, vector<Student *> inputStudentVector,\n                       vector<Course *> inputCourseVector, vector<Professor *> inputProfessorVector,\n                       Users *inputDefaultUser, string inputSubCommand, string inputArguments, string inputUserWhoLogged , vector<vector<string>> inputCourseOfferList)\n    : SuperCommand(inputMajorVector, inputStudentVector, inputCourseVector, inputProfessorVector, inputDefaultUser)\n{\n    if (!CheckSubCommand(inputSubCommand))\n    {\n        throw ErrorHandler(2);\n    }\n    subCommand = inputSubCommand;\n    stringstream argstream(inputArguments);\n    string temp;\n    while (getline(argstream, temp, ' '))\n    {\n        arguments.push_back(temp);\n    }\n    userWhoLogged = inputUserWhoLogged;\n    tempCourseOfferList = inputCourseOfferList;\n}\n\nbool GetCommand::CheckSubCommand(string inputSubCommand)\n{\n    for (int i = 0; i < getSubCommandsList.size(); i++)\n    {\n        if (inputSubCommand == getSubCommandsList[i])\n        {\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid GetCommand::RunCommand()\n{\n    if (subCommand == \"courses\")\n    {\n        GetCourses(arguments);\n    }\n    else if (subCommand == \"personal_page\")\n    {\n        // LogoutFunc(arguments);\n    }\n    else if (subCommand == \"post\")\n    {\n        // PostFunc(arguments);\n    }\n    else if (subCommand == \"notification\")\n    {\n        GetNotifications(arguments);\n    }\n    else if (subCommand == \"my_courses\")\n    {\n        // course_offer func\n    }\n}\n\nvoid GetCommand::GetNotifications(vector<string> inputArgs)\n{\n    if (inputArgs.size() != 0)\n    {\n        throw ErrorHandler(3);\n    }\n    ShowNotificaion(userWhoLogged);\n}\n\nvector<vector<string>> SortCourseList(vector<vector<string>> inputCourseList)\n{\n    \n}\n\nvoid GetCommand::GetCourses(vector<string> inputArgs)\n{\n    bool isCourse = false;\n    int courseListLine = 0;\n    if(inputArgs.size() == 1 || inputArgs.size() > 2)\n    {\n        throw ErrorHandler(3);\n    }\n    if (inputArgs.size() == 0)\n    {\n        sort(tempCourseOfferList.begin() , tempCourseOfferList.end() , { return a[0] > b[0]});\n    }\n    else if(inputArgs.size() == 2)\n    {\n        if (stoi(inputArgs[1]) < 1)\n        {\n            throw ErrorHandler(3);\n        }\n        for(courseListLine; courseListLine < tempCourseOfferList.size() ; courseListLine++)\n        {\n            if (tempCourseOfferList[courseListLine][0] == inputArgs[1])\n            {\n                isCourse = true;\n                break;\n            }\n        }\n        if(!isCourse)\n        {\n            throw ErrorHandler(2);\n        }\n        cout << tempCourseOfferList[courseListLine][0] << \" \"\n             << FindCourse(tempCourseOfferList[courseListLine][0])->getName() << \" \"\n             << tempCourseOfferList[courseListLine][2] << \" \"\n             << FindProfessor(tempCourseOfferList[courseListLine][1])->getName() << \" \"\n             << tempCourseOfferList[courseListLine][3] << \" \"\n             << tempCourseOfferList[courseListLine][4] << \" \"\n             << tempCourseOfferList[courseListLine][5] << \" \" << endl;\n    }\n}","filename":"/home/rayan/Desktop/clone/AP-FinalPraject/getCommand.cpp","identifier":"Text Change","lineCount":112,"languageId":"cpp"},"failed":false}