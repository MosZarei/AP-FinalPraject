{"date":"2024-06-08T05:03:16.207Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":246,"content":"#include \"main.hpp\"\n\nMain::Main(char *inputCSV1, char *inputCSV2, char *inputCSV3, char *inputCSV4)\n{\n    MakeMajorList(inputCSV1);\n    MakeStudentList(inputCSV2);\n    MakeCourseList(inputCSV3);\n    MakeProfessorList(inputCSV4);\n}\n\nvoid Main::MakeStudentList(char *studentsCSV)\n{\n    CSVReader studentsFile(studentsCSV);\n    for (int i = 1; i <= numOfLines(studentsCSV); i++)\n    {\n        Student *newStudent = new Student(studentsFile.getObject(i, 1), studentsFile.getObject(i, 2), studentsFile.getObject(i, 3),\n                                          studentsFile.getObject(i, 4), studentsFile.getObject(i, 5));\n        studentsList.push_back(newStudent);\n    }\n}\n\nvoid Main::MakeProfessorList(char *professorsCSV)\n{\n    CSVReader professorsFile(professorsCSV);\n    for (int i = 1; i <= numOfLines(professorsCSV); i++)\n    {\n        Professor *newProfessor = new Professor(professorsFile.getObject(i, 1), professorsFile.getObject(i, 2), professorsFile.getObject(i, 3),\n                                                professorsFile.getObject(i, 4), professorsFile.getObject(i, 5));\n        professorList.push_back(newProfessor);\n    }\n}\n\nvoid Main::MakeCourseList(char *coursesCSV)\n{\n    CSVReader coursesFile(coursesCSV);\n    for (int i = 1; i <= numOfLines(coursesCSV); i++)\n    {\n        Course *newCourse = new Course(coursesFile.getObject(i, 1), coursesFile.getObject(i, 2), coursesFile.getObject(i, 3),\n                                       coursesFile.getObject(i, 4), coursesFile.getObject(i, 5));\n        courseList.push_back(newCourse);\n    }\n}\n\nvoid Main::MakeMajorList(char *majorsCSV)\n{\n    CSVReader majorsFile(majorsCSV);\n    for (int i = 1; i <= numOfLines(majorsCSV); i++)\n    {\n        Major *newMajor = new Major(majorsFile.getObject(i, 1), majorsFile.getObject(i, 2));\n        majorList.push_back(newMajor);\n    }\n}\n\nvoid Main::Run()\n{\n    while (true)\n    {\n        try\n        {\n            SuperCommand command(majorList, studentsList, courseList, professorList);\n            command.GetInput();\n            SelectSubCommand(/*majorCSVFile, studentCSVFile, courseCSVFile, professorCSVFile,*/\n                             command.GetSuperCommand(), command.GetSubCommand(), command.GetArguments());\n            command.Update(majorList , studentsList , courseList , professorList);\n        }\n        catch (ErrorHandler &error)\n        {\n            error.GetErrorMassage();\n        }\n    }\n}\n\nvoid Main::SelectSubCommand(char *majorsCSV, char *studentsCSV, char *coursesCSV, char *professorsCSV,\n                            string inputSuperCommand, string inputSubCommand, string inputArguments)\n{\n    if (inputSuperCommand == \"POST\")\n    {\n        PostCommand command(majorsCSV, studentsCSV, coursesCSV, professorsCSV, inputSubCommand, inputArguments);\n        command.RunCommand();\n        MakeLoggedProgress(inputSubCommand);\n    }\n    else if (inputSuperCommand == \"GET\")\n    {\n        // GetCommand command(subCommand , argumenrs);\n    }\n    else if (inputSuperCommand == \"PUT\")\n    {\n        // PutCommand command(subCommand , argumenrs);\n    }\n    else if (inputSuperCommand == \"DELETE\")\n    {\n        // DeleteCommand command(subCommand , argumenrs);\n    }\n}\n\nvoid Main::MakeLoggedProgress(string subCommand)\n{\n    if (subCommand == \"login\" && loginState == LOGGED_OUT)\n    {\n        loginState = LOGGED_IN;\n        cout << \"OK\" << endl;\n    }\n    else if (subCommand == \"login\" && loginState == LOGGED_IN)\n    {\n        throw ErrorHandler(4);\n    }\n    if (subCommand == \"logout\" && loginState == LOGGED_IN)\n    {\n        loginState = LOGGED_OUT;\n        cout << \"OK\" << endl;\n    }\n    else if (subCommand == \"logout\" && loginState == LOGGED_OUT)\n    {\n        throw ErrorHandler(4);\n    }\n}","filename":"/home/rayan/Desktop/clone/AP-FinalPraject/main.cpp","identifier":"Text Change","lineCount":116,"languageId":"cpp"},"failed":false}