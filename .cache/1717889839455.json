{"date":"2024-06-08T23:37:18.349Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":1045,"content":"#pragma once\n#include \"requarment.hpp\"\n#include \"csvreader.hpp\"\n#include \"users.hpp\"\n#include \"student.hpp\"\n#include \"professor.hpp\"\n#include \"course.hpp\"\n#include \"major.hpp\"\n#include \"errors.hpp\"\n#include \"main.hpp\"\n\nclass SuperCommand\n{\npublic:\n    SuperCommand(vector<Major *> inputMajorVector, vector<Student *> inputStudentVector, vector<Course *> inputCourseVector,\n                 vector<Professor *> inputProfessorVector, Users *inputDefaultUser);\n    void Update(vector<Major *> &inputMajorVector, vector<Student *> &inputStudentVector, vector<Course *> &inputCourseVector,\n                vector<Professor *> &inputProfessorVector, Users *&inputDefalutUser);\n    string GetSuperCommand() { return superCommand; }\n    string GetSubCommand() { return subCommand; }\n    string GetArguments() { return arguments; }\n    void GetInput();\n    void CheckLoginCondditions(string userID, string userPass);\n    void ConnectUsers(string mainUserID, string targetUserId);\n    void AddPostToUserPage(string userID, string title, string massage);\n    void DeletePostOfUserPage(string userID, string postNum);\n    void ShowNotificaion(string userID);\n\nprivate:\n    vector<Student *> tempStudentsList;\n    vector<Professor *> tempProfessorList;\n    vector<Course *> tempCourseList;\n    vector<Major *> tempMajorList;\n    Users *tempDefaultUser;\n    vector<vector<string>> tempCourseOffers;\n    vector<string> superCommandList = {\"POST\", \"GET\", \"DELETE\", \"PUT\"};\n    string superCommand, subCommand, seprator, arguments = \"\";\n    bool CheckSuperCommand(string superCommand);\n    Student *FindStudent(string userID);\n    Professor *FindProfessor(string userID);\n    void SendNotification(string userID, vector<string> connectedUsers , string notificationMassage);\n};\n\nclass PostCommand : public SuperCommand\n{\npublic:\n    PostCommand(vector<Major *> inputMajorVector, vector<Student *> inputStudentVector,\n                vector<Course *> inputCourseVector, vector<Professor *> inputProfessorVector,\n                Users *inputDefaultUser, string inputSubCommand, string inputArguments, string inputUserWhoLogged);\n    void RunCommand();\n    string GetUserWhoLogged() { return userWhoLogged; }\n\nprivate:\n    vector<string> postSubCommandsList = {\"login\", \"logout\", \"post\", \"connect\", \"course_offer\"};\n    string subCommand;\n    vector<string> arguments;\n    string userWhoLogged = \"\";\n    bool CheckSubCommand(string inputSubCommand);\n    void LoginFunc(vector<string> inputArgs);\n    void LogoutFunc(vector<string> inputArgs);\n    void ConnectFunc(vector<string> inputArgs);\n    void PostFunc(vector<string> inputArgs);\n    void CourseOfferFunc(vector<string> inputArgs);\n};\n\nclass GetCommand : public SuperCommand\n{\npublic:\n    GetCommand(vector<Major *> inputMajorVector, vector<Student *> inputStudentVector,\n               vector<Course *> inputCourseVector, vector<Professor *> inputProfessorVector,\n               Users *inputDefaultUser, string inputSubCommand, string inputArguments, string inputUserWhoLogged);\n    void RunCommand();\n\nprivate:\n    vector<string> getSubCommandsList = {\"courses\", \"personal_page\", \"post\", \"notification\", \"my_courses\"};\n    string subCommand;\n    vector<string> arguments;\n    string userWhoLogged = \"\";\n    bool CheckSubCommand(string inputSubCommand);\n    void GetNotifications(vector<string>inputArgs);\n};\n\nclass DeleteCommand : public SuperCommand\n{\npublic:\n    DeleteCommand(vector<Major *> inputMajorVector, vector<Student *> inputStudentVector,\n                  vector<Course *> inputCourseVector, vector<Professor *> inputProfessorVector,\n                  Users *inputDefaultUser, string inputSubCommand, string inputArguments, string inputUserWhoLogged);\n    void RunCommand();\n\nprivate:\n    vector<string> deleteSubCommandsList = {\"post\", \"my_courses\"};\n    string subCommand;\n    vector<string> arguments;\n    string userWhoLogged = \"\";\n    bool CheckSubCommand(string inputSubComand);\n    void DeletePostFunc(vector<string> inputArgs);\n};","filename":"/home/rayan/Desktop/clone/AP-FinalPraject/superCommand.hpp","identifier":"Text Change","lineCount":98,"languageId":"cpp"},"failed":false}