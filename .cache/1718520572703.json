{"date":"2024-06-16T06:49:31.110Z","courseId":"17","assignment":"AP-Spring03-CA6-phase2","trace":{"version":243,"content":"#include \"users.hpp\"\n\nUsers::Users(string userName, string userPass, string userMajor, string userID)\n{\n    name = userName;\n    password = userPass;\n    majorID = userMajor;\n    ID = userID;\n}\n\nUsers::Users(string userID, string userPass)\n{\n    ID = userID;\n    password = userPass;\n}\n\nbool Users::MatchPassword(string userPass)\n{\n    if (userPass == password)\n    {\n        return true;\n    }\n    return false;\n}\n\nvoid Users::Connect(string targetUserID)\n{\n    for (int i = 0; i < connectedUsers.size(); i++)\n    {\n        if (connectedUsers[i] == targetUserID)\n        {\n            throw ErrorHandler(3);\n        }\n    }\n    connectedUsers.push_back(targetUserID);\n}\n\nvoid Users::AddPost(string title, string message, string photoAddress)\n{\n    // vector<string> temp;\n    // temp.push_back(to_string(postListSize + 1));\n    // temp.push_back(title);\n    // temp.push_back(massage);\n    // postsList.push_back(temp);\n    UserPosts *newPost = new UserPosts(to_string(postListSize + 1), title, message, photoAddress);\n    postList.push_back(newPost);\n    postListSize++;\n}\n\nvoid Users::AddTAFormPost(string title , string message)\n{\n    // UserPosts *newTAForm = new UserPosts(to_string(postListSize + 1), title, message);\n    // newTAForm->MakeTAForm();\n    //TAForm *newTAForm = new TAForm(to_string(postListSize + 1) , selectedCourse , message);\n    // postList.push_back(inputTAForm);\n    UserPosts *newUserPost = new UserPosts(to_string(postListSize + 1) , title , message);\n    newUserPost->MakeTAForm();\n    postList.push_back(newUserPost);\n    postListSize++;\n}\n\nvoid Users::DeletePost(string postNum)\n{\n    vector<UserPosts *> temp;\n    for (int i = 0; i < postList.size(); i++)\n    {\n        if (postNum == postList[i]->GetPostID())\n        {\n            postList.push_back(postList[i]);\n            for (int j = i + 1; j < postList.size(); j++)\n            {\n                postList[j - 1] = postList[j];\n            }\n            postList.pop_back();\n            postList.pop_back();\n            break;\n        }\n        else if (i == postList.size() - 1)\n        {\n            throw ErrorHandler(2);\n        }\n    }\n}\n\nvoid Users::AddNotification(string userID, string userName, string notificationMassage)\n{\n    vector<string> temp;\n    temp.push_back(userID);\n    temp.push_back(userName);\n    temp.push_back(notificationMassage);\n    notifications.push_back(temp);\n}\n\nvoid Users::PrintNotification()\n{\n    if (notifications.size() == 0)\n    {\n        throw ErrorHandler(1);\n    }\n    for (int i = notifications.size() - 1; i >= 0; i--)\n    {\n        cout << notifications[i][0] << \" \" << notifications[i][1] << \": \" << notifications[i][2] << endl;\n    }\n    notifications.clear();\n}\n\nvoid Users::PrintPosts(int line)\n{\n    if (postList[line]->IsTAForm())\n    {\n        stringstream stream(postList[line]->GetPostTitle());\n        string title;\n        getline(stream, title, '|');\n        cout << postList[line]->GetPostID() << \" \" << title << endl;\n    }\n    else\n    {\n         cout << postList[line]->GetPostID() << \" \" << postList[line]->GetPostTitle() << endl;\n    }\n}\n\nvoid Users::PrintPostDetail(string postID)\n{\n    int postCounter = 0;\n    for (postCounter; postCounter < postList.size(); postCounter++)\n    {\n        if (postList[postCounter]->GetPostID() == postID)\n        {\n            break;\n        }\n    }\n    //postList[postCounter]->PrintDetail();\n    if (postList[postCounter]->IsTAForm())\n    {\n        stringstream stream(postList[postCounter]->GetPostTitle());\n        string title, detail;\n        getline(stream, title, '|');\n        getline(stream, detail, '|');\n        cout << postList[postCounter]->GetPostID() << \" \" << title << endl\n             << detail << endl\n             << postList[postCounter]->GetPostMessage() << endl;\n    }\n    else\n    {\n        cout << postList[postCounter]->GetPostID() << \" \" << postList[postCounter]->GetPostTitle() << \" \" << postList[postCounter]->GetPostMessage() << endl;\n    }\n}\n\nbool Users::CheckPostExistence(string postID)\n{\n    for (int i = 0; i < postList.size(); i++)\n    {\n        if (postID == postList[i]->GetPostID())\n        {\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid Users::AddProfilePhoto(string photoAddress)\n{\n    profilePhoto = photoAddress;\n}\n","filename":"/home/rayan/Desktop/clone/AP-FinalPraject/users.cpp","identifier":"Text Change","lineCount":165,"languageId":"cpp"},"failed":false}