{"date":"2024-06-08T20:14:46.992Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"content":"#include \"superCommand.hpp\"\n\nPostCommand::PostCommand(vector<Major *> inputMajorVector, vector<Student *> inputStudentVector,\n                         vector<Course *> inputCourseVector, vector<Professor *> inputProfessorVector,\n                         Users *inputDefaultUser, string inputSubCommand, string inputArguments, string inputUserWhoLogged)\n    : SuperCommand(inputMajorVector, inputStudentVector, inputCourseVector, inputProfessorVector, inputDefaultUser)\n{\n    if (!CheckSubCommand(inputSubCommand))\n    {\n        throw ErrorHandler(2);\n    }\n    subCommand = inputSubCommand;\n    stringstream argstream(inputArguments);\n    string temp;\n    while (getline(argstream, temp, ' '))\n    {\n        arguments.push_back(temp);\n    }\n    userWhoLogged = inputUserWhoLogged;\n}\n\nbool PostCommand::CheckSubCommand(string inputSubCommand)\n{\n    for (int i = 0; i < postSubCommandsList.size(); i++)\n    {\n        if (inputSubCommand == postSubCommandsList[i])\n        {\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid PostCommand::RunCommand()\n{\n    if (subCommand == \"login\")\n    {\n        LoginFunc(arguments);\n    }\n    else if (subCommand == \"logout\")\n    {\n        LogoutFunc(arguments);\n    }\n    else if (subCommand == \"post\")\n    {\n        // post func\n    }\n    else if (subCommand == \"connect\")\n    {\n        ConnectFunc(arguments);\n    }\n    else if (subCommand == \"course_offer\")\n    {\n        // course_offer func\n    }\n}\n\nvoid PostCommand::LoginFunc(vector<string> inputArgs)\n{\n    if (inputArgs.size() != 4)\n    {\n        throw ErrorHandler(3);\n    }\n    string inputID, inputPassword;\n    if (inputArgs[0] == \"id\")\n    {\n        inputID = inputArgs[1];\n        inputPassword = inputArgs[3];\n    }\n    else\n    {\n        inputID = inputArgs[3];\n        inputPassword = inputArgs[1];\n    }\n    CheckLoginCondditions(inputID, inputPassword);\n    userWhoLogged = inputID;\n}\n\nvoid PostCommand::LogoutFunc(vector<string> inputArgs)\n{\n    if (inputArgs.size() != 0)\n    {\n        throw ErrorHandler(3);\n    }\n}\n\nvoid PostCommand::ConnectFunc(vector<string> inputArgs)\n{\n    if (inputArgs.size() != 2)\n    {\n        throw ErrorHandler(3);\n    }\n    int idNum = stoi(inputArgs[1]);\n    if (idNum < 1)\n    {\n        throw ErrorHandler(3);\n    }\n    ConnectUsers(userWhoLogged, inputArgs[1]);\n    ConnectUsers(inputArgs[1], userWhoLogged);\n    cout << \"OK\" << endl;\n}\n\nvoid PostCommand::PostFunc(vector<string> inputArgs)\n{\n    \n}","filename":"/home/rayan/Desktop/clone/AP-FinalPraject/postCommand.cpp","identifier":"Save Document","languageId":"cpp","version":376,"lineCount":106},"failed":false}