{"date":"2024-06-09T19:41:02.654Z","courseId":"17","assignment":"AP-Spring03-CA6","trace":{"version":3,"content":"#include \"professor.hpp\"\n\nProfessor::Professor(string professorID, string professorName, string professorMajor, string professorPosition, string professorPass)\n    : Users(professorName, professorPass, professorMajor, professorID)\n{\n    pPosition = professorPosition;\n}\n\nbool Professor::CanGetCourse(vector<string> courseMajorsID)\n{\n    for (int i = 0; i < courseMajorsID.size(); i++)\n    {\n        if (getMajor() == courseMajorsID[i])\n        {\n            return true;\n        }\n    }\n    return false;\n}\n\nbool Professor::MatchTime(string time)\n{\n    vector<string> courseTime;\n    stringstream stream(time);\n    string temp;\n    getline(stream, temp, ':');\n    courseTime.push_back(temp);\n    getline(stream, temp, ':');\n    stringstream stream2(temp);\n    while (getline(stream2, temp, '-'))\n    {\n        courseTime.push_back(temp);\n    }\n    for (int i = 0; i < courseOfferTime.size(); i++)\n    {\n        if (courseOfferTime[i][0] == courseTime[0] &&\n                ((stoi(courseTime[1]) >= stoi(courseOfferTime[i][1])) && (stoi(courseTime[1]) < stoi(courseOfferTime[i][2]))) ||\n            ((stoi(courseTime[2]) > stoi(courseOfferTime[i][1])) && (stoi(courseTime[2]) <= stoi(courseOfferTime[i][2]))))\n        {\n            return false;\n        }\n    }\n    courseOfferTime.push_back(courseTime);\n    return true;\n}","filename":"/home/rayan/Desktop/clone/AP-FinalPraject/professor.cpp","identifier":"Text Change","lineCount":45,"languageId":"cpp"},"failed":true}